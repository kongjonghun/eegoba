plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.diffplug.spotless" version "6.25.0"
}

group = 'lgcns'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		// log4j2 사용하기 위해 default인 logback 제외
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// jdbc
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	// mysql
	implementation 'mysql:mysql-connector-java:8.0.33'
	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	// web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// my-batis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	// JBCrypt
	implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'


	//	// jpa
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	// oauth
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//	// security
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	// session
//	implementation 'org.springframework.session:spring-session-core'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	//testImplementation 'org.springframework.security:spring-security-test'
}

spotless {
	java {
		removeUnusedImports()
		trimTrailingWhitespace()
		indentWithTabs(4)
		endWithNewline()
		googleJavaFormat()
	}
	format 'misc', {
		target '**/*.gradle', '**/*.md', '**/.gitignore'
		trimTrailingWhitespace()
		indentWithTabs(2)
		endWithNewline()
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
